{
	"info": {
		"_postman_id": "7620970a-0b8a-4e99-b204-05dbf02fdeea",
		"name": "Devices API",
		"description": "# ‚õìÔ∏è Get started here\n\nPostman allows you to test your APIs using simple Javascript code. You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis template guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n- POST `/unregister`\n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## üîñ **How to use this template**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\".\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" alt=\"\" height=\"103\" width=\"266\">\n\n**Step 3:** To customize this template, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## ‚ÑπÔ∏è Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9940650"
	},
	"item": [
		{
			"name": "Create device",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"brand\": \"brand\",\r\n  \"name\": \"device\",\r\n  \"state\": \"in-use\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/devices",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"devices"
					]
				},
				"description": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection."
			},
			"response": [
				{
					"name": "in-use status",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"brand\": \"brand\",\r\n  \"name\": \"device\",\r\n  \"state\": \"in-use\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 21 Mar 2025 18:05:07 GMT"
						},
						{
							"key": "Content-Length",
							"value": "158"
						}
					],
					"cookie": [],
					"body": "{\n    \"device\": {\n        \"brand\": \"brand\",\n        \"created_at\": \"2025-03-21T15:05:07.449582-03:00\",\n        \"id\": 31,\n        \"name\": \"device\",\n        \"state\": \"in-use\"\n    },\n    \"message\": \"device created successfully\"\n}"
				},
				{
					"name": "available status",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"brand\": \"brand\",\r\n  \"name\": \"device\",\r\n  \"state\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 21 Mar 2025 18:09:37 GMT"
						},
						{
							"key": "Content-Length",
							"value": "161"
						}
					],
					"cookie": [],
					"body": "{\n    \"device\": {\n        \"brand\": \"brand\",\n        \"created_at\": \"2025-03-21T15:09:37.451064-03:00\",\n        \"id\": 38,\n        \"name\": \"device\",\n        \"state\": \"available\"\n    },\n    \"message\": \"device created successfully\"\n}"
				},
				{
					"name": "inactive status",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"brand\": \"brand\",\r\n  \"name\": \"device\",\r\n  \"state\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 21 Mar 2025 18:09:37 GMT"
						},
						{
							"key": "Content-Length",
							"value": "161"
						}
					],
					"cookie": [],
					"body": "{\n    \"device\": {\n        \"brand\": \"brand\",\n        \"created_at\": \"2025-03-21T15:09:37.451064-03:00\",\n        \"id\": 38,\n        \"name\": \"device\",\n        \"state\": \"available\"\n    },\n    \"message\": \"device created successfully\"\n}"
				},
				{
					"name": "wrong status",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"brand\": \"brand\",\r\n  \"name\": \"device\",\r\n  \"state\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 21 Mar 2025 18:09:37 GMT"
						},
						{
							"key": "Content-Length",
							"value": "161"
						}
					],
					"cookie": [],
					"body": "{\n    \"device\": {\n        \"brand\": \"brand\",\n        \"created_at\": \"2025-03-21T15:09:37.451064-03:00\",\n        \"id\": 38,\n        \"name\": \"device\",\n        \"state\": \"available\"\n    },\n    \"message\": \"device created successfully\"\n}"
				},
				{
					"name": "missing body",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"brand\": \"brand\",\r\n  \"name\": \"device\",\r\n  \"state\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 21 Mar 2025 18:09:37 GMT"
						},
						{
							"key": "Content-Length",
							"value": "161"
						}
					],
					"cookie": [],
					"body": "{\n    \"device\": {\n        \"brand\": \"brand\",\n        \"created_at\": \"2025-03-21T15:09:37.451064-03:00\",\n        \"id\": 38,\n        \"name\": \"device\",\n        \"state\": \"available\"\n    },\n    \"message\": \"device created successfully\"\n}"
				}
			]
		},
		{
			"name": "Update device",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Token is returned\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.have.property('device');",
							"    pm.expect(responseData.device).to.have.property('id');",
							"    pm.expect(responseData.device).to.have.property('name');",
							"    pm.expect(responseData.device).to.have.property('brand');",
							"    pm.expect(responseData.device).to.have.property('state');",
							"    pm.expect(responseData.device).to.have.property('created_at');",
							"});",
							"",
							"pm.test(\"Copy token to collection variable\", function () {",
							"    const responseData = pm.response.json();",
							"    pm.collectionVariables.set(\"token\", responseData.message);",
							"});",
							"",
							"",
							"pm.test(\"Message is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Token is successfully copied to the 'token' collection variable\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData.device).to.exist;",
							"    pm.expect(responseData.device.id).to.be.a('number');",
							"    pm.expect(pm.collectionVariables.has('token')).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"device2\",\r\n    \"brand\": \"brand2\",\r\n    \"state\": \"inactive\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/devices/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"devices",
						"2"
					]
				},
				"description": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection."
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"device23\",\r\n    \"brand\": \"brand23\",\r\n    \"state\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/12",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"12"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:51:37 GMT"
						},
						{
							"key": "Content-Length",
							"value": "160"
						}
					],
					"cookie": [],
					"body": "{\n    \"device\": {\n        \"brand\": \"brand23\",\n        \"created_at\": \"2025-03-22T00:34:46.668038Z\",\n        \"id\": 12,\n        \"name\": \"device23\",\n        \"state\": \"available\"\n    },\n    \"message\": \"device updated successfully\"\n}"
				},
				{
					"name": "all field is required",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"device23\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"2"
							]
						}
					},
					"status": "Unprocessable Entity",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:50:31 GMT"
						},
						{
							"key": "Content-Length",
							"value": "58"
						}
					],
					"cookie": [],
					"body": "{\n    \"brand\": \"Brand is required\",\n    \"state\": \"State is required\"\n}"
				},
				{
					"name": "device not found",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"device23\",\r\n    \"brand\": \"brand23\",\r\n    \"state\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"2"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:51:08 GMT"
						},
						{
							"key": "Content-Length",
							"value": "29"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"device not found\"\n}"
				}
			]
		},
		{
			"name": "Update device field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required Content-Type header with value 'Application/json'\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Error field should not be empty\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.error).to.exist.and.to.not.be.empty;",
							"});",
							"",
							"",
							"pm.test(\"Verify that the response does not contain any sensitive information\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.error).to.exist.and.to.be.a('string');",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"daniel\",\r\n    \"state\": \"in-use\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/devices/3",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"devices",
						"3"
					]
				},
				"description": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection."
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"daniel\",\r\n    \"state\": \"in-use\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:47:21 GMT"
						},
						{
							"key": "Content-Length",
							"value": "152"
						}
					],
					"cookie": [],
					"body": "{\n    \"device\": {\n        \"brand\": \"brand\",\n        \"created_at\": \"2025-03-21T22:55:11.651625Z\",\n        \"id\": 3,\n        \"name\": \"daniel\",\n        \"state\": \"in-use\"\n    },\n    \"message\": \"device patched successfully\"\n}"
				},
				{
					"name": "in use",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"daniel\",\r\n    \"state\": \"in-use\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"3"
							]
						}
					},
					"status": "Unprocessable Entity",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:47:44 GMT"
						},
						{
							"key": "Content-Length",
							"value": "58"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"device is in use, cannot update name or brand\"\n}"
				},
				{
					"name": "invalid request",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"daniel\",\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"4"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:48:04 GMT"
						},
						{
							"key": "Content-Length",
							"value": "28"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"invalid request\"\n}"
				},
				{
					"name": "change name",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"daniel\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"4"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:48:40 GMT"
						},
						{
							"key": "Content-Length",
							"value": "154"
						}
					],
					"cookie": [],
					"body": "{\n    \"device\": {\n        \"brand\": \"brand\",\n        \"created_at\": \"2025-03-21T22:55:15.138269Z\",\n        \"id\": 4,\n        \"name\": \"daniel\",\n        \"state\": \"inactive\"\n    },\n    \"message\": \"device patched successfully\"\n}"
				},
				{
					"name": "change brand",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"brand\": \"apple\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"4"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:49:05 GMT"
						},
						{
							"key": "Content-Length",
							"value": "154"
						}
					],
					"cookie": [],
					"body": "{\n    \"device\": {\n        \"brand\": \"apple\",\n        \"created_at\": \"2025-03-21T22:55:15.138269Z\",\n        \"id\": 4,\n        \"name\": \"daniel\",\n        \"state\": \"inactive\"\n    },\n    \"message\": \"device patched successfully\"\n}"
				},
				{
					"name": "change state",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"state\": \"inactive\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"4"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:49:28 GMT"
						},
						{
							"key": "Content-Length",
							"value": "154"
						}
					],
					"cookie": [],
					"body": "{\n    \"device\": {\n        \"brand\": \"apple\",\n        \"created_at\": \"2025-03-21T22:55:15.138269Z\",\n        \"id\": 4,\n        \"name\": \"daniel\",\n        \"state\": \"inactive\"\n    },\n    \"message\": \"device patched successfully\"\n}"
				},
				{
					"name": "Wrong state",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"state\": \"123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"4"
							]
						}
					},
					"status": "Unprocessable Entity",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:49:54 GMT"
						},
						{
							"key": "Content-Length",
							"value": "61"
						}
					],
					"cookie": [],
					"body": "{\n    \"state\": \"State must be 'available', 'in-use' or 'inactive\"\n}"
				}
			]
		},
		{
			"name": "Get all devices",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Content type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Validate the devices array\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.devices).to.be.an('array').that.is.not.empty;",
							"    responseData.devices.forEach(function(device) {",
							"        pm.expect(device).to.be.an('object');",
							"        pm.expect(device.id).to.be.a('number');",
							"        pm.expect(device.name).to.be.a('string');",
							"        pm.expect(device.brand).to.be.a('string');",
							"        pm.expect(device.state).to.be.a('string');",
							"        pm.expect(device.created_at).to.be.a('string');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Name in the response is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.devices[0].name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Name is correctly returned\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.devices[0].name).to.exist.and.to.be.a('string');",
							"});",
							"",
							"pm.test(\"Created_at is in a valid date format\", function () {",
							"    const responseData = pm.response.json();",
							"    const createdAt = responseData.devices[0].created_at;",
							"    ",
							"    pm.expect(createdAt).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$/);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/devices",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"devices"
					]
				},
				"description": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the¬†`token`¬†collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned."
			},
			"response": [
				{
					"name": "Get all devices",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Fri, 21 Mar 2025 22:56:17 GMT"
						},
						{
							"key": "Content-Length",
							"value": "528"
						}
					],
					"cookie": [],
					"body": "{\n    \"devices\": [\n        {\n            \"id\": 5,\n            \"name\": \"device\",\n            \"brand\": \"brand\",\n            \"state\": \"inactive\",\n            \"created_at\": \"2025-03-21T22:55:16.069295Z\"\n        },\n        {\n            \"id\": 4,\n            \"name\": \"device\",\n            \"brand\": \"brand\",\n            \"state\": \"inactive\",\n            \"created_at\": \"2025-03-21T22:55:15.138269Z\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"device\",\n            \"brand\": \"brand\",\n            \"state\": \"available\",\n            \"created_at\": \"2025-03-21T22:55:11.651625Z\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"device\",\n            \"brand\": \"brand\",\n            \"state\": \"available\",\n            \"created_at\": \"2025-03-21T22:55:10.252162Z\"\n        },\n        {\n            \"id\": 1,\n            \"name\": \"device\",\n            \"brand\": \"brand\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-21T22:55:05.95764Z\"\n        }\n    ]\n}"
				},
				{
					"name": "Get all devices by brand",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices?brand=Samsung",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices"
							],
							"query": [
								{
									"key": "brand",
									"value": "Samsung"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:40:33 GMT"
						},
						{
							"key": "Content-Length",
							"value": "344"
						}
					],
					"cookie": [],
					"body": "{\n    \"devices\": [\n        {\n            \"id\": 11,\n            \"name\": \"Galaxy S21\",\n            \"brand\": \"Samsung\",\n            \"state\": \"available\",\n            \"created_at\": \"2025-03-22T00:34:46.668038Z\"\n        },\n        {\n            \"id\": 14,\n            \"name\": \"Galaxy S20\",\n            \"brand\": \"Samsung\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-22T00:34:46.668038Z\"\n        },\n        {\n            \"id\": 17,\n            \"name\": \"Galaxy S10\",\n            \"brand\": \"Samsung\",\n            \"state\": \"available\",\n            \"created_at\": \"2025-03-22T00:34:46.668038Z\"\n        }\n    ]\n}"
				},
				{
					"name": "Get all devices by state",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices?state=in-use",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices"
							],
							"query": [
								{
									"key": "brand",
									"value": "Samsung",
									"disabled": true
								},
								{
									"key": "state",
									"value": "in-use"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:41:14 GMT"
						},
						{
							"key": "Content-Length",
							"value": "736"
						}
					],
					"cookie": [],
					"body": "{\n    \"devices\": [\n        {\n            \"id\": 19,\n            \"name\": \"device\",\n            \"brand\": \"brand\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-22T00:38:05.456916Z\"\n        },\n        {\n            \"id\": 14,\n            \"name\": \"Galaxy S20\",\n            \"brand\": \"Samsung\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-22T00:34:46.668038Z\"\n        },\n        {\n            \"id\": 15,\n            \"name\": \"Pixel 4\",\n            \"brand\": \"Google\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-22T00:34:46.668038Z\"\n        },\n        {\n            \"id\": 16,\n            \"name\": \"iPhone 10\",\n            \"brand\": \"Apple\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-22T00:34:46.668038Z\"\n        },\n        {\n            \"id\": 7,\n            \"name\": \"device\",\n            \"brand\": \"brand3\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-21T22:57:23.61181Z\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"device\",\n            \"brand\": \"brand2\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-21T22:57:20.862878Z\"\n        },\n        {\n            \"id\": 1,\n            \"name\": \"device\",\n            \"brand\": \"brand\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-21T22:55:05.95764Z\"\n        }\n    ]\n}"
				},
				{
					"name": "Get all devices by brand and state",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices?state=in-use",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices"
							],
							"query": [
								{
									"key": "brand",
									"value": "Samsung",
									"disabled": true
								},
								{
									"key": "state",
									"value": "in-use"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:41:14 GMT"
						},
						{
							"key": "Content-Length",
							"value": "736"
						}
					],
					"cookie": [],
					"body": "{\n    \"devices\": [\n        {\n            \"id\": 19,\n            \"name\": \"device\",\n            \"brand\": \"brand\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-22T00:38:05.456916Z\"\n        },\n        {\n            \"id\": 14,\n            \"name\": \"Galaxy S20\",\n            \"brand\": \"Samsung\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-22T00:34:46.668038Z\"\n        },\n        {\n            \"id\": 15,\n            \"name\": \"Pixel 4\",\n            \"brand\": \"Google\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-22T00:34:46.668038Z\"\n        },\n        {\n            \"id\": 16,\n            \"name\": \"iPhone 10\",\n            \"brand\": \"Apple\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-22T00:34:46.668038Z\"\n        },\n        {\n            \"id\": 7,\n            \"name\": \"device\",\n            \"brand\": \"brand3\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-21T22:57:23.61181Z\"\n        },\n        {\n            \"id\": 6,\n            \"name\": \"device\",\n            \"brand\": \"brand2\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-21T22:57:20.862878Z\"\n        },\n        {\n            \"id\": 1,\n            \"name\": \"device\",\n            \"brand\": \"brand\",\n            \"state\": \"in-use\",\n            \"created_at\": \"2025-03-21T22:55:05.95764Z\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Get device by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/devices/3",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"devices",
						"3"
					]
				},
				"description": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection."
			},
			"response": [
				{
					"name": "by id",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:42:43 GMT"
						},
						{
							"key": "Content-Length",
							"value": "115"
						}
					],
					"cookie": [],
					"body": "{\n    \"device\": {\n        \"brand\": \"brand\",\n        \"created_at\": \"2025-03-21T22:55:11.651625Z\",\n        \"id\": 3,\n        \"name\": \"device\",\n        \"state\": \"available\"\n    }\n}"
				},
				{
					"name": "id invalid",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/invalid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"invalid"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:43:08 GMT"
						},
						{
							"key": "Content-Length",
							"value": "30"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"invalid device id\"\n}"
				},
				{
					"name": "id not found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/1000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"1000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:43:33 GMT"
						},
						{
							"key": "Content-Length",
							"value": "29"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"device not found\"\n}"
				}
			]
		},
		{
			"name": "Delete device by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"device1\",\r\n    \"brand\": \"brand1\",\r\n    \"state\": \"inactive\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/v1/devices/2",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"v1",
						"devices",
						"2"
					]
				},
				"description": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection."
			},
			"response": [
				{
					"name": "success",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"device1\",\r\n    \"brand\": \"brand1\",\r\n    \"state\": \"inactive\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/11",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"11"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:46:46 GMT"
						},
						{
							"key": "Content-Length",
							"value": "57"
						}
					],
					"cookie": [],
					"body": "{\n    \"device_id\": 11,\n    \"message\": \"device deleted successfully\"\n}"
				},
				{
					"name": "not found",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"device1\",\r\n    \"brand\": \"brand1\",\r\n    \"state\": \"inactive\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/2",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"2"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:44:22 GMT"
						},
						{
							"key": "Content-Length",
							"value": "29"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"device not found\"\n}"
				},
				{
					"name": "device in use",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"device1\",\r\n    \"brand\": \"brand1\",\r\n    \"state\": \"inactive\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/devices/6",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"devices",
								"6"
							]
						}
					},
					"status": "Unprocessable Entity",
					"code": 422,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "Application/json"
						},
						{
							"key": "Date",
							"value": "Sat, 22 Mar 2025 00:45:20 GMT"
						},
						{
							"key": "Content-Length",
							"value": "58"
						}
					],
					"cookie": [],
					"body": "{\n    \"error\": \"device is in use, cannot update name or brand\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8000"
		},
		{
			"key": "token",
			"value": ""
		}
	]
}